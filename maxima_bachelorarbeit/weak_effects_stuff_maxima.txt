
#aim: computation of weak effect limit (dirichlet limit)


#my rescaling: ni=NI/N^2 = NI*h^2, h = 1/N
#theta_{X,Y} = 1-(Thetai/N) = 1-Thetai*h

#used for dirichlet_lim_v1.tex:
scaled_n_X: N_X * h * h;
scaled_n_Y: N_Y * h * h;
scaled_theta_X: 1- ThetaX * h;
scaled_theta_Y: 1- ThetaY * h;
scaled_i: i;
scaled_a: a;


#used for dirichlet_lim_v2.tex:
scaled_n_X: N_X * h;
scaled_n_Y: N_Y * h;
scaled_theta_X: 1- ThetaX * h;
scaled_theta_Y: 1- ThetaY * h;
scaled_i: i;
scaled_a: a;

#used for dirichlet_lim_v3.tex:
scaled_n_X: N_X * h;
scaled_n_Y: N_Y * h;
scaled_theta_X: 1- ThetaX * h;
scaled_theta_Y: 1- ThetaY * h;
scaled_i : I*h;
scaled_a: a;

#used for dirichlet_lim_v4.tex:
scaled_n_X: N_X * h;
scaled_n_Y: N_Y * h;
scaled_theta_X: 1- ThetaX * h;
scaled_theta_Y: 1- ThetaY * h;
scaled_i : I*h;
scaled_a: A*h;

f:(1-x)*(scaled_theta_X *(x+scaled_n_X+scaled_a*scaled_i))/(scaled_theta_X *(x+scaled_n_X+scaled_a*scaled_i)+1-x+scaled_n_Y+scaled_a * (1-scaled_i));
g: x*(scaled_theta_Y *(1-x+scaled_n_Y+scaled_a*(1-scaled_i)))/(x + scaled_n_X + scaled_a*scaled_i + scaled_theta_Y *(1-x+scaled_n_Y+scaled_a*(1-scaled_i)));

term: f-g;

taylor_term: taylor(term,h,0,1);

h_coeff : coeff(taylor_term,h,1);
order_zero_term : coeff(taylor_term,h,0);
sol: h*h_coeff +  order_zero_term;

#check if it is indeed solution for f - g:
taylor(term-sol,h,0,1);

#now f+g:
term_plus : f+g;
taylor_plus : taylor(term_plus,h,0,0);
sol_plus: coeff(taylor_plus,h,0);

#check if it is indeed solution for f + g:
taylor(term_plus - sol_plus,h,0,0);